#!/sbin/sh
# AnyKernel2 Backend
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIP="$3";
DIR=`dirname "$ZIP"`;

ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_perm_recursive() {
  dirs=$(echo $* | $bb awk '{ print substr($0, index($0,$5)) }');
  for i in $dirs; do
    chown -R $1.$2 $i; chown -R $1:$2 $i;
    find "$i" -type d -exec chmod $3 {} +;
    find "$i" -type f -exec chmod $4 {} +;
  done;
}
file_getprop() { grep "^$2" "$1" | cut -d= -f2; }
getprop() { test -e /sbin/getprop && /sbin/getprop $1 || file_getprop /default.prop $1; }
abort() { ui_print "$*"; umount /system; umount /data; exit 1; }

show_progress 1.34 4;
ui_print " ";
mkdir -p /tmp/anykernel/bin;
cd /tmp/anykernel;
unzip -o "$ZIP";
if [ $? != 0 -o -z "$(ls /tmp/anykernel/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;

# temp place holder to support multi ROM base on build prop
mount -o ro /system;
cp -rf /system/build.prop /tmp/anykernel/system/bp.sh;
getbptemp="$(file_getprop /tmp/anykernel/system/bp.sh ro.build.display.id)";
  for i in 1 2 3 4 5; do
	getbp="$(file_getprop /tmp/anykernel/anykernel.sh rom.check$i)";
	if [ "$getbptemp" == "$getbp" ]; then
	  cp -rf /tmp/anykernel/system/stockanykernel$i /tmp/anykernel/anykernel.sh;
	  romv=$getbp;
	fi;
  done;
chmod -R 755 /tmp/anykernel/tools /tmp/anykernel/bin;
bb=/tmp/anykernel/tools/busybox;

ui_print "$(file_getprop /tmp/anykernel/anykernel.sh kernel.string)";
if [ "$getbptemp" == "$romv" ]; then
ui_print "     Setting up as Stock ROM $(file_getprop /tmp/anykernel/system/bp.sh ro.build.display.id)";
fi;
if [ "$getbptemp" != "$romv" ]; then
ui_print "     Setting up as CM-Base Custom ROM";
fi;
ui_print "                                               ";
ui_print "-----------------------------------------------";
ui_print "                                               ";
ui_print "         Version - V2.0.1-1                    ";
ui_print "             Marshmallow                       ";
ui_print "      for CM-Base and Stock ROM                ";
ui_print "                                               ";
ui_print "Check XDA Thread, for recommendations help, etc";
ui_print "                                               ";
ui_print "-----------------------------------------------";
mount -o ro /system;
mount /data;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.devicecheck)" == 1 ]; then
  ui_print "Checking device...";
  for i in 1 2 3 4 5; do
    testname="$(file_getprop /tmp/anykernel/anykernel.sh device.name$i)";
    if [ "$(getprop ro.product.device)" == "$testname" -o "$(getprop ro.build.product)" == "$testname" ]; then
      ui_print "$testname";
      match=1;
    fi;
  done;
  ui_print " ";
  if [ "$match" != 1 ]; then
    abort "Unsupported device. Aborting...";
  fi;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.initd)" == 1 ]; then
  ui_print "Creating init.d...";
  ui_print " ";
  mount -o remount,rw /system;
  mkdir /system/etc/init.d;
  set_perm_recursive 0 0 0755 0755 /system/etc/init.d;
  mount -o remount,ro /system;
fi;

ui_print "Installing kernel...";
for i in $($bb --list); do
  $bb ln -s $bb /tmp/anykernel/bin/$i;
done;
if [ $? != 0 -o -z "$(ls /tmp/anykernel/bin)" ]; then
  abort "Recovery busybox setup failed. Aborting...";
fi;
PATH="/tmp/anykernel/bin:$PATH" $bb ash /tmp/anykernel/anykernel.sh $2;
if [ $? != "0" ]; then
  abort;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.modules)" == 1 ]; then
  ui_print " ";
  ui_print "Pushing modules...";
  mount -o remount,rw /system;
  rm -rf /system/lib/modules/*;
  cp -rf /tmp/anykernel/modules/* /system/lib/modules/;
  ln -sf /system/lib/modules/qca_cld/qca_cld_wlan.ko /system/lib/modules/wlan.ko;
  set_perm_recursive 0 0 0755 0644 /system/lib/modules;
  cp -rf /tmp/anykernel/system/etc/firmware/wlan/qca_cld/* /system/etc/firmware/wlan/qca_cld/;
  set_perm_recursive 0 0 0755 0644 /system/etc/firmware/wlan/qca_cld/;
  cp -rf /tmp/anykernel/system/etc/wifi/* /system/etc/wifi/;
  set_perm_recursive 0 0 0755 0644 /system/etc/wifi/;
  cp -rf /tmp/anykernel/system/bin/thermal-engine /system/bin/thermal-engine;
  rm -rf /system/vendor/bin/*;
  set_perm_recursive 0 2000 0755 0755 /system/bin/thermal-engine;
  if [ "$getbptemp" == "$romv" ]; then
	cp -rf /tmp/anykernel/system/etc/init.qcom.post_boot.sh /system/etc/init.qcom.post_boot.sh;
	set_perm_recursive 0 0 0755 0644 /system/etc/init.qcom.post_boot.sh;
  fi;
  mount -o remount,ro /system;
fi;

if [ "$(file_getprop /tmp/anykernel/anykernel.sh do.cleanup)" == 1 ]; then
  rm -rf /tmp/anykernel;
fi;

umount /system;
umount /data;
ui_print " ";
ui_print "Done!";

